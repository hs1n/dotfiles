#/usr/bin/env bash

# Uncomment following when hiding ootb status bar
yabai -m config external_bar main:24:0
yabai -m config external_bar all:24:0

set +x

# ====== Variables =============================

declare gaps
declare color

gaps["top"]="2"
gaps["bottom"]="2"
gaps["left"]="2"
gaps["right"]="2"
gaps["inner"]="2"

color["focused"]="0xE0808080"
color["normal"]="0x00010101"
color["preselect"]="0xE02d74da"

# ===== Loading Scripting Additions ============

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== Tiling setting =========================

yabai -m config layout                      bsp

yabai -m config top_padding                 "${gaps["top"]}"
yabai -m config bottom_padding              "${gaps["bottom"]}"
yabai -m config left_padding                "${gaps["left"]}"
yabai -m config right_padding               "${gaps["right"]}"
yabai -m config window_gap                  "${gaps["inner"]}"

yabai -m config mouse_follows_focus         off
yabai -m config focus_follows_mouse         off

yabai -m config window_topmost              off
yabai -m config window_opacity              on
yabai -m config window_shadow               float

yabai -m config window_border               off
yabai -m config window_border_width         1
yabai -m config active_window_border_color  "${color["focused"]}"
yabai -m config normal_window_border_color  "${color["normal"]}"
yabai -m config insert_feedback_color       "${color["preselect"]}"

yabai -m config active_window_opacity       0.90
yabai -m config normal_window_opacity       0.75
yabai -m config split_ratio                 0.5

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize
yabai -m config mouse_drop_action           swap

# ===== Rules ==================================

# ===== Floating
#Floating windows can also be moved and resized at the same time by placing them on a grid. The grid format is <rows>:<cols>:<start-x>:<start-y>:<width>:<height>, where rows and cols are how many rows and columns there are in total, start-x and start-y are the start indices for the row and column and width and height are how many rows and columns the window spans.



# below console
yabai -m rule --add app="(Alacritty|kitty)" manage=off grid=5:1:0:3:1:2 border=off sticky=on layer=above
# center-middle console
#yabai -m rule --add app="(Alacritty|kitty)" manage=off grid=12:5:1:1:4:10 border=off sticky=on layer=above
yabai -m rule --add label="App Store" app="^App Store$" grid=8:5:1:1:3:5 manage=off
yabai -m rule --add label="Spotify" app="Spotify" grid=10:16:1:1:14:8 manage=off
yabai -m rule --add label="System Settings" app="^System Settings$" title=".*" grid=8:5:1:1:3:5 manage=off
yabai -m rule --add label="Finder" app="^Finder$"
#grid=10:8:1:1:6:8 manage=off

yabai -m rule --add label="Chat" app="(LINE|Telegram)" grid=8:5:1:1:3:5 manage=off
yabai -m rule --add app="IntelliJ IDEA" manage=off

# ===== Space 1
yabai -m space 1 --label "Browser"
yabai -m rule --add label="Safari" app="^Safari$" space=1
yabai -m rule --add label="Brave" app="^Brave$" space=1

# ===== Space 2
yabai -m space 2 --label "Dev"
yabai -m rule --add label="Intellij" app="^(Intellij|Fleet)$" space=2

# ===== Space 3
yabai -m space 3 --label "Tools"
yabai -m rule --add label="Adobe" app="^Adobe$" space=3

# ===== Space 4
yabai -m space 4 --label "Social"
yabai -m rule --add app="LINE" space=4
yabai -m rule --add app="Telegram" space=4
yabai -m rule --add app="Discord" space=4

# ===== Space 5
yabai -m space 5 --label "Other"

# ===== manage=off
yabai -m rule --add app="系統*" manage=off

yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off

yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" manage=off
yabai -m rule --add label="Stats" app="Stats" manage=off
yabai -m rule --add app="Tip*" manage=off
yabai -m rule --add app="JetBrains Toolbox" manage=off

# ===== Signals ================================

# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget
#declare ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-index-jsx\"'"

#yabai -m signal --add event=application_front_switched action="${ubersicht_spaces_refresh_command}"
#yabai -m signal --add event=display_changed action="${ubersicht_spaces_refresh_command}"
#yabai -m signal --add event=space_changed action="${ubersicht_spaces_refresh_command}"
#yabai -m signal --add event=window_created action="${ubersicht_spaces_refresh_command}"
#yabai -m signal --add event=window_destroyed action="${ubersicht_spaces_refresh_command}"
#yabai -m signal --add event=window_focused action="${ubersicht_spaces_refresh_command}"
#yabai -m signal --add event=window_title_changed action="${ubersicht_spaces_refresh_command}"

yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"

set +x 

printf "yabai: configuration loaded...\\n"

